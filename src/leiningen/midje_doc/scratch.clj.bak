(ns leiningen.midje-doc.parser
  (:require [markdown.core :as md])
  (:import com.lowagie.text.DocumentException
           org.xhtmlrenderer.pdf.ITextOutputDevice
           org.xhtmlrenderer.pdf.ITextRenderer
           org.xhtmlrenderer.pdf.ITextUserAgent
           org.xhtmlrenderer.resource.XMLResource
           org.w3c.dom.Document
           org.xml.sax.InputSource
           [java.io FileOutputStream
            InputStream]))

(def renderer (ITextRenderer.))

(def content
  (str "<html><head><style>\n"
       "div.header {\n"
       "display: block; text-align: center;\n"
       "position: running(header);}\n"
       "div.footer {\n"
       "display: block; text-align: center;\n"
       "position: running(footer);}\n"
       "div.content {page-break-after: always;}"
       "@page { @top-center { content: element(header) }}\n "
       "@page { @bottom-center { content: element(footer) }}\n"
       "</style></head>\n"
       "<body><div class='header'>Chapter One</div><div class='footer'>Footer</div><div class='content'>Page1</div><div>Page2</div></body></html>"
       ))

(spit "test.html" content)
(doto renderer
    (.setDocumentFromString  (slurp "test.html"))
    (.layout)
    (.createPDF (FileOutputStream. "test.pdf"))
  )


(md/md-to-html-string
 "The most straightforward code is one where no issues raised. This
   can be seen in Example {{ribol-normal-eq}}."
)
